
    model
    {
    
    for (i in 1:k)
    {
    log(mu[i]) <- log(E[i]) + X[i,] %*% beta + phi[i]
    Y[i] ~ dpois(mu[i])
    phi[i] <- inprod(theta, u[i,])
    Fr[i] <- pnorm(r[i], 0, 1/invQ1[i,i])
    for(h in 2:H){
    u[i, h] <- ifelse(Fr[i] > sum_pi[h-1] && Fr[i] < sum_pi[h], 1, 0)
    }
    u[i,1] <- ifelse(sum(u[i, 2:H])==0, 1, 0)
    }
    
    for (i in (k+1):(2*k))
    {
    log(mu[i]) <- log(E[i]) + X[i,] %*% beta + phi[i]
    Y[i] ~ dpois(mu[i])
    phi[i] <- inprod(theta, u[i,])
    Fr[i] <- pnorm(r[i], 0, 1/invQ2[i-k,i-k])
    for(h in 2:H){
    u[i, h] <- ifelse(Fr[i] > sum_pi[h-1] && Fr[i] < sum_pi[h], 1, 0)
    }
    u[i,1] <- ifelse(sum(u[i, 2:H])==0, 1, 0)
    }
    
    for (i in (2*k+1):(3*k))
    {
    log(mu[i]) <- log(E[i]) + X[i,] %*% beta + phi[i]
    Y[i] ~ dpois(mu[i])
    phi[i] <- inprod(theta, u[i,])
    Fr[i] <- pnorm(r[i], 0, 1/invQ3[i-2*k,i-2*k])
    for(h in 2:H){
    u[i, h] <- ifelse(Fr[i] > sum_pi[h-1] && Fr[i] < sum_pi[h], 1, 0)
    }
    u[i,1] <- ifelse(sum(u[i, 2:H])==0, 1, 0)
    }
    
    for (i in (3*k+1):(4*k))
    {
    log(mu[i]) <- log(E[i]) + X[i,] %*% beta + phi[i]
    Y[i] ~ dpois(mu[i])
    phi[i] <- inprod(theta, u[i,])
    Fr[i] <- pnorm(r[i], 0, 1/invQ4[i-3*k,i-3*k])
    for(h in 2:H){
    u[i, h] <- ifelse(Fr[i] > sum_pi[h-1] && Fr[i] < sum_pi[h], 1, 0)
    }
    u[i,1] <- ifelse(sum(u[i, 2:H])==0, 1, 0)
    }
    
    
    pi[1] <- V[1]
    prod[1] <- 1 - pi[1]
    for (h in 2:(H-1)){
    prod[h] <- prod[h-1] * (1-V[h])
    pi[h] <- V[h] * prod[h-1]
    }
    pi[H] <- 1-sum(pi[1:(H-1)])
    
    for (h in 1:H){
    theta[h] ~ dnorm(0,taus)
    V[h] ~ dbeta(1,alpha)
    sum_pi[h] <- sum(pi[1:h])
    }
    
    Q1 <- tau1 * (D - rho1 * Minc)
    Q2 <- tau2 * (D - rho2 * Minc)
    Q3 <- tau3 * (D - rho3 * Minc)
    Q4 <- tau4 * (D - rho4 * Minc)
    
    r1[1:k] ~ dmnorm(rep(0, k), Q1)
    r2[1:k] ~ dmnorm(rep(0, k), Q2)
    r3[1:k] ~ dmnorm(rep(0, k), Q3)
    r4[1:k] ~ dmnorm(rep(0, k), Q4)
    r[1:k] <- r1[1:k]
    r[(k+1):(2*k)] <- r2[1:k]
    r[(2*k+1):(3*k)] <- r3[1:k]
    r[(3*k+1):(4*k)] <- r4[1:k]
    
    invQ1 <- inverse(Q1)
    invQ2 <- inverse(Q2)
    invQ3 <- inverse(Q3)
    invQ4 <- inverse(Q4)
    
    rho1 ~ dunif(0, 0.98)
    rho2 ~ dunif(0, 0.98)
    rho3 ~ dunif(0, 0.98)
    rho4 ~ dunif(0, 0.98)
    tau1 ~ dgamma(2, 0.1)
    tau2 ~ dgamma(2, 0.1)
    tau3 ~ dgamma(2, 0.1)
    tau4 ~ dgamma(2, 0.1)
    
    taus ~ dgamma(2,1)
    beta[1:ncolumn] ~ dmnorm(rep(0,ncolumn), (0.0001*I));
    }
    
